Q2: Explain the key differences between JavaScript and HTML. Provide examples of situations where you would use each.
Answer: 
JavaScript and HTML serve different but complementary roles in web development. Hereâ€™s an explanation of their key differences and examples of when to use each:

Key Differences
- HTML (HyperText Markup Language)

--> Purpose: HTML is a markup language used to structure content on the web.
--> Role: It defines the structure and layout of a web page using elements like headings, paragraphs, links, images, and other multimedia.
--> Static Content: HTML is static by nature. It provides the basic skeleton of a web page without interactivity.
--> Syntax: HTML uses tags enclosed in angle brackets (e.g., <html>, <body>, <div>).

- JavaScript

--> Purpose: JavaScript is a programming language used to create dynamic and interactive web content.
--> Role: It adds behavior and interactivity to the web page, allowing users to interact with the content.
--> Dynamic Content: JavaScript can change the content, style, and structure of a web page dynamically, based on user actions or other events.
--> Syntax: JavaScript uses a more traditional programming syntax with variables, functions, loops, and conditionals (e.g., var, function, if).

- Examples of Usage

1) HTML

- Creating a Web Page Structure:

Example: Creating the basic structure of a web page with headings, paragraphs, and images.

<!DOCTYPE html>
<html>
<head>
    <title>My Web Page</title>
</head>
<body>
    <h1>Welcome to My Web Page</h1>
    <p>This is a paragraph of text.</p>
    <img src="image.jpg" alt="A beautiful scenery">
    <a href="https://www.example.com">Visit Example</a>
</body>
</html>

- Embedding Media:

Example: Adding a video to a web page.

<video controls>
    <source src="movie.mp4" type="video/mp4">
    Your browser does not support the video tag.
</video>


2) JavaScript

-Adding Interactivity:
Example: Displaying an alert when a button is clicked.


<!DOCTYPE html>
<html>
<head>
    <title>Interactive Page</title>
</head>
<body>
    <button onclick="showAlert()">Click Me</button>
    
    <script>
        function showAlert() {
            alert('Button clicked!');
        }
    </script>
</body>
</html>


- Form Validation:

Example: Validating a form before submission.

<!DOCTYPE html>
<html>
<head>
    <title>Form Validation</title>
</head>
<body>
    <form onsubmit="return validateForm()">
        <label for="name">Name:</label>
        <input type="text" id="name" name="name">
        <input type="submit" value="Submit">
    </form>
    
    <script>
        function validateForm() {
            var name = document.getElementById('name').value;
            if (name === '') {
                alert('Name must be filled out');
                return false;
            }
            return true;
        }
    </script>
</body>
</html>


















