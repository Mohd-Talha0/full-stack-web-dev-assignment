Q2: Describe the categorization of operators in JavaScript based on their functionality. Provide examples for each category.
Answer: 

Operators in JavaScript can be categorized based on their functionality. Hereâ€™s a breakdown of the different categories of operators and examples for each:

1) Arithmetic Operators
Arithmetic operators perform mathematical operations on numbers.

let sum = 5 + 3; // sum is 8
let difference = 10 - 4; // difference is 6
let product = 7 * 2; // product is 14
let quotient = 20 / 5; // quotient is 4
let remainder = 10 % 3; // remainder is 1
let power = 2 ** 3; // power is 8

2) Assignment Operators
Assignment operators assign values to variables.

let x = 10;
x += 5; // x is now 15
x -= 3; // x is now 12
x *= 2; // x is now 24
x /= 4; // x is now 6
x %= 5; // x is now 1

3) Comparison Operators
Comparison operators compare two values and return a Boolean (true or false).

5 == '5'; // true
5 === '5'; // false
5 != '5'; // false
5 !== '5'; // true
10 > 5; // true
10 >= 10; // true

4)  Logical Operators
Logical operators perform logical operations and return a Boolean result.

true && false; // false 
true || false; // true
!true; // false

5) Bitwise Operators
Bitwise operators perform operations on the binary representations of numbers.

5 & 1; // 1
5 | 1; // 5
5 ^ 1; // 4
~5; // -6
5 << 1; // 10
5 >> 1; // 2

6) String Operators
String operators concatenate (combine) strings.

let greeting = 'Hello, ' + 'World!'; // greeting is 'Hello, World!'
let message = 'Hello';
message += ', World!'; // message is 'Hello, World!'

7) Ternary Operator
The ternary operator is a shorthand for an if-else statement.

let age = 18;
let isAdult = age >= 18 ? 'Yes' : 'No'; // isAdult is 'Yes'

8) Type Operators
Type operators check or convert the type of a value.

typeof 'Hello'; // 'string'
typeof 42; // 'number'
typeof true; // 'boolean'
typeof undefined; // 'undefined'
typeof {a: 1}; // 'object'

let arr = [1, 2, 3];
arr instanceof Array; // true
arr instanceof Object; // true





















